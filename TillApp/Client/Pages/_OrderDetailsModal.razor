@page "/OrderDetails"
@inject IOrderService _orderService
@inject NavigationManager _navManger;


<!-- Modal -->
<div class="modal-dialog" style="padding-top:0px!important;margin-top:0px!important;">
    <div class="modal-content">
        <div class="modal-body text-start text-black p-4">
            <h5 class="modal-title text-uppercase mb-5" id="exampleModalLabel">@order.OrderName</h5>
            <h4 class="mb-5" style="color: #35558a;">Thanks for your order</h4>
            <p class="mb-0" style="color: #35558a;">Payment summary</p>
            <hr class="mt-2 mb-4"
                style="height: 0; background-color: transparent; opacity: .75; border-top: 2px dashed #9e9e9e;">

            @foreach (var item in order.OrderItems)
            {
                <div class="d-flex justify-content-between">
                    <p class="fw-bold mb-0">@item.ItemName (Qty:@item.Quantity)</p>
                    <p class="text-muted mb-0">@item.Money EGP</p>
                </div>
            }


            <div class="d-flex justify-content-between">
                <p class="small mb-0">Shipping</p>
                <p class="small mb-0">0.00 EGP</p>
            </div>

            <div class="d-flex justify-content-between pb-1">
                <p class="small">Tax</p>
                <p class="small">0.00 EGP</p>
            </div>

            <div class="d-flex justify-content-between">
                <p class="fw-bold">Total</p>
                <p class="fw-bold" style="color: #35558a;">@order.Money</p>
            </div>

        </div>
        @if (order.IsPaid == false)
        {
            <div class="modal-footer d-flex justify-content-center border-top-0 py-4">
                <button @onclick="(()=>MarkOrderAsPaid())" type="button" class="btn btn-primary btn-lg mb-1" style="background-color: #35558a;">
                    Mark order as paid
                </button>
            </div>
        }
    </div>
</div>
@code {


    Order order = new();

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;

    [Parameter]
    public int ItemId { get; set; }
    protected override async Task OnInitializedAsync()
    {
        order.OrderItems = new List<OrderItem>();
        order = await _orderService.GetOrderByIdAsync(ItemId);
    }

    private async Task MarkOrderAsPaid()
    {
        await _orderService.MarkOrderAsPaidAsync(order);
        await this.BlazoredModal.CloseAsync();
        _navManger.NavigateTo("orders", true);
    }
}
